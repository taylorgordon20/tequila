#!/usr/bin/env python3

import os
from conans import ConanFile

BUILD_TEMPLATE = """# auto-generated by conan recipe
package(default_visibility = ["//visibility:public"])

cc_library(
  name = "lib",
  srcs = [{libs}],
  hdrs = glob([{includes}]),
  strip_include_prefix = "include_0",
)"""


class BazelRecipe(ConanFile):
  settings = "os", "compiler", "build_type", "arch"
  requires = "<REQUIREMENT>"

  def imports(self):
    # Symlink all of the static library files.
    libs = []
    for libdir in self.deps_cpp_info.libdirs:
      for lib in os.listdir(libdir):
        os.symlink(os.path.join(libdir, lib), lib)
        libs.append(lib)

    # Symlink all of the static library files.
    includes = []
    for i, includedir in enumerate(self.deps_cpp_info.includedirs):
      include = "include_{}".format(i)
      os.symlink(includedir, include)
      includes.append(include)

    # Output the bazel BUILD file for this library.
    with open("BUILD", "w") as build_file:
      build_file.write(
          BUILD_TEMPLATE.format(
              libs=", ".join("'{}'".format(lib) for lib in libs),
              includes=", ".join(
                  "'{}/**'".format(include) for include in includes
              ),
          )
      )
